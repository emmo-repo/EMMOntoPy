name: CI Tests

on:
  pull_request:
  push:
    branches:
      - master
      - 'push-action/**'

jobs:

  pre-commit:
    name: pre-commit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel

        while IFS="" read -r line || [ -n "${line}" ]; do
          if [[ "${line}" =~ ^pre-commit.*$ ]]; then
            pre_commit="${line}"
          fi
        done < requirements_dev.txt

        while IFS="" read -r line || [ -n "${line}" ]; do
          if [[ "${line}" =~ ^invoke.*$ ]]; then
            invoke="${line}"
          fi
        done < requirements_docs.txt

        pip install ${pre_commit} ${invoke}

    - name: Run pre-commit
      run: SKIP=pylint pre-commit run --all-files --show-diff-on-failure


  pylint-safety:
    name: PyLint and safety
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel

        pip install -U -r requirements.txt -r requirements_dev.txt -r requirements_docs.txt
        pip install safety

    - name: Run PyLint
      run: pylint --rcfile=pyproject.toml *.py tools

    - name: Run safety
      run: pip freeze | safety check --stdin


  tests:
    name: pytest
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y graphviz openjdk-11-jre-headless

    - name: Install Python dependencies (and EMMOntoPy)
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel

        pip install -U -e .[dev]

    - name: Test with pytest
      run: pytest

    # - name: Run vertical demo
    #   run: |
    #     cd demo/vertical
    #     python define_ontology.py
    #     python plot_ontology.py
    #     cd -

    # - name: Run horizontal demo
    #   run: |
    #     cd demo/horizontal
    #     python step1_generate_metadata.py
    #     python step2_define_metadata.py
    #     python step3_instantiate.py
    #     python step4_map_instance.py
    #     cd -


  ontodoc:
    name: EMMO documentation (test using ontodoc)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Check Ubuntu version we are running under
      run: |
        uname -a
        sudo apt-get update

    - name: Current environment
      run: env

    - name: Install pandoc 2.1.2
      run: |
        #sudo apt-get install -y pandoc
        wget https://github.com/jgm/pandoc/releases/download/2.1.2/pandoc-2.1.2-1-amd64.deb
        sudo apt-get install -y ./pandoc-2.1.2-1-amd64.deb

    - name: Install tzdata non-interactively
      run: |
        sudo ln -fs /usr/share/zoneinfo/Europe/Oslo /etc/localtime
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --no-install-recommends tzdata
        sudo dpkg-reconfigure --frontend noninteractive tzdata

    - name: Install other dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get install -y graphviz
        sudo apt-get install -y texlive-xetex
        sudo apt-get install -y texlive-latex-extra

    - name: Install EMMOntoPy
      run: |
        python setup.py install

    - name: Create EMMO documentation
      run: |
        cd examples/emmodoc
        python ../../tools/ontodoc -f simple-html emmo-inferred emmo-simple.html
        python ../../tools/ontodoc -t emmo.md -p no-self-contained emmo-inferred emmo.html
        python ../../tools/ontodoc -t emmo.md emmo-inferred emmo.pdf
        cd -


  build_package:
    name: Build Python package and install (integrity test)
    runs-on: ubuntu-latest
    env:
      SDIST_DIR: sdist_action
      BDIST_DIR: bdist_action

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel
        pip install -r requirements.txt

    - name: Build source and built distributions
      run: python setup.py sdist bdist_wheel

    - name: Check build and installation of PyPI source distribution
      run: |
        python setup.py -v sdist -d ${SDIST_DIR} bdist_wheel -d ${BDIST_DIR}
        SDIST_FILE=$( ls ${SDIST_DIR}/ )
        echo "BDIST_FILE=$( ls ${BDIST_DIR}/ )" >> $GITHUB_ENV
        ORIGINAL_PWD=$(pwd)
        mkdir -p /tmp/installation_dir
        cd /tmp/installation_dir
        pip install ${ORIGINAL_PWD}/${SDIST_DIR}/${SDIST_FILE}

    - name: Remove installation again
      run: pip uninstall -y EMMO

    - name: Install built distribution (wheel)
      run: |
        ORIGINAL_PWD=$(pwd)

        if [ "${ORIGINAL_PWD}" == "/tmp/installation_dir" ]; then echo "Wrong original dir: ${ORIGINAL_PWD}"; exit 1; fi
        mkdir -p /tmp/installation_dir
        cd /tmp/installation_dir
        pip install ${ORIGINAL_PWD}/${BDIST_DIR}/${{ env.BDIST_FILE }}

  documentation:
    name: Check documentation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel
        pip install -U -e .[docs]

    - name: Set up git user
      run: |
        git config --global user.name "EMMOntoPy Developers"
        git config --global user.email "Team4.0@SINTEF.onmicrosoft.com"

    - name: Check API Reference and landing page
      run: |
        invoke create-api-reference-docs --pre-clean
        invoke create-docs-index

        if [ -n "$(git status --porcelain docs/api_reference docs/index.md)" ]; then
          echo -e "\u274c Discrepancies found !"
          echo -e "The following files in the documentation must be committed:"
          git status --porcelain docs/api_reference docs/index.md
          echo -e "\nRun:\n"
          echo "    invoke create-api-reference-docs --pre-clean"
          echo -e "    invoke create-docs-index\n"
          echo "And commit the changed files."
          exit 1
        else
          echo -e "\u2705 All good !"
        fi

    - name: Build check
      run: mkdocs build --strict --verbose
